// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  password_hash String
  first_name    String?
  last_name     String?
  role          String        @default("klant") // "klant" or "admin"
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  appointments  Appointment[]
  quotes        Quote[]
}

model Listing {
  id            String   @id @default(cuid())
  type          String // "Auto" or "Boot"
  name          String
  brand         String?
  model         String?
  year          Int?
  mileage       Int?
  sailing_hours Int?
  price         Float
  description   String?
  status        String   @default("beschikbaar") // "beschikbaar", "gereserveerd", "verkocht"
  condition     String   @default("gebruikt") // "nieuw" or "gebruikt"
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model Appointment {
  id             String   @id @default(cuid())
  user_id        String
  service_type   String
  requested_date DateTime
  notes          String?
  status         String   @default("in afwachting") // "in afwachting", "bevestigd", "geannuleerd"
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  user           User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Quote {
  id          String   @id @default(cuid())
  user_id     String
  subject     String
  amount      Float
  description String?
  status      String   @default("in afwachting") // "in afwachting", "geaccepteerd", "geweigerd"
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}