// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  email         String        @unique
  password_hash String
  first_name    String
  last_name     String
  role          Role          @default(klant)
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  appointments  Appointment[]
  quotes        Quote[]
}

model Listing {
  id            String        @id @default(uuid())
  type          ListingType
  name          String
  brand         String?
  model         String?
  year          Int?
  mileage       Int?
  sailing_hours Int?
  price         Float
  description   String?
  status        ListingStatus @default(beschikbaar)
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
}

model Appointment {
  id             String            @id @default(uuid())
  user_id        String
  service_type   ServiceType
  requested_date DateTime
  notes          String?
  status         AppointmentStatus @default(in_afwachting)
  created_at     DateTime          @default(now())
  updated_at     DateTime          @updatedAt
  user           User              @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Quote {
  id          String      @id @default(uuid())
  user_id     String
  subject     String
  amount      Float
  description String?
  status      QuoteStatus @default(in_afwachting)
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  user        User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

enum Role {
  klant
  admin
}

enum ListingType {
  Auto
  Boot
}

enum ListingStatus {
  beschikbaar
  verkocht
  gereserveerd
}

enum ServiceType {
  Detailing
  Tuning
  Consultatie
}

enum AppointmentStatus {
  in_afwachting
  bevestigd
  geannuleerd
}

enum QuoteStatus {
  in_afwachting
  geaccepteerd
  geweigerd
}